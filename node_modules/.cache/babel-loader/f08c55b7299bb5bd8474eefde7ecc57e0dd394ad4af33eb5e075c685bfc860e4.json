{"ast":null,"code":"var _jsxFileName = \"/home/dennis/Desktop/MORINGA/phase 2/Phase-2-CODE-CHALLENGE-2A/bot/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\nimport SortBar from './SortBar';\nimport BotSpecs from './BotSpecs';\nimport './App.css';\nimport FilterBar from './FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [showBotSpecs, setShowBotSpecs] = useState(false);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/bots').then(response => response.json()).then(data => {\n      setData(data);\n      setFilteredData(data); // Initialize filteredData with all the data\n    }).catch(error => console.error('Error fetching bots:', error));\n  }, []);\n  const handleEnlist = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n    }\n  };\n  const handleRemove = botId => {\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n\n    // Delete the bot from the backend\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => console.log('Bot removed and discharged:', data)).catch(error => console.error('Error removing and discharging bot:', error));\n  };\n  const handleShowBotSpecs = bot => {\n    setSelectedBot(bot);\n    setShowBotSpecs(true);\n  };\n  const handleHideBotSpecs = () => {\n    setSelectedBot(null);\n    setShowBotSpecs(false);\n  };\n  const handleDischarge = botId => {\n    handleRemove(botId); // Call handleRemove to remove the bot from the frontend and backend\n  };\n\n  // Function to filter data based on selected classes\n  const applyFilters = selectedClasses => {\n    if (selectedClasses.length === 0) {\n      setFilteredData(data); // No filters selected, show all data\n    } else {\n      setFilteredData(data.filter(bot => selectedClasses.includes(bot.bot_class)));\n    }\n  };\n  useEffect(() => {\n    applyFilters([]); // Initial data, no filters\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !showBotSpecs && /*#__PURE__*/_jsxDEV(SortBar, {\n      data: filteredData,\n      setData: setFilteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      setFilters: applyFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      onDelete: handleRemove,\n      onDischarge: handleDischarge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), showBotSpecs && /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: handleEnlist,\n      onBack: handleHideBotSpecs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      data: filteredData,\n      enlistedBots: enlistedBots,\n      onEnlist: handleEnlist,\n      onRemove: handleRemove,\n      onShowSpecs: handleShowBotSpecs,\n      onDischarge: handleDischarge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ky1/L9jdyos8FSw97uyYI1umDA0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","SortBar","BotSpecs","FilterBar","jsxDEV","_jsxDEV","App","_s","data","setData","enlistedBots","setEnlistedBots","showBotSpecs","setShowBotSpecs","selectedBot","setSelectedBot","filteredData","setFilteredData","fetch","then","response","json","catch","error","console","handleEnlist","bot","some","enlistedBot","bot_class","prevEnlistedBots","handleRemove","botId","filter","id","method","log","handleShowBotSpecs","handleHideBotSpecs","handleDischarge","applyFilters","selectedClasses","length","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","setFilters","onDelete","onDischarge","onEnlist","onBack","onRemove","onShowSpecs","_c","$RefreshReg$"],"sources":["/home/dennis/Desktop/MORINGA/phase 2/Phase-2-CODE-CHALLENGE-2A/bot/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\nimport SortBar from './SortBar';\nimport BotSpecs from './BotSpecs';\nimport './App.css';\nimport FilterBar from './FilterBar';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [showBotSpecs, setShowBotSpecs] = useState(false);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filteredData, setFilteredData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots')\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        setFilteredData(data); // Initialize filteredData with all the data\n      })\n      .catch((error) => console.error('Error fetching bots:', error));\n  }, []);\n\n  const handleEnlist = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n    }\n  };\n\n  const handleRemove = (botId) => {\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((bot) => bot.id !== botId)\n    );\n\n    // Delete the bot from the backend\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE',\n    })\n      .then((response) => response.json())\n      .then((data) => console.log('Bot removed and discharged:', data))\n      .catch((error) => console.error('Error removing and discharging bot:', error));\n  };\n\n  const handleShowBotSpecs = (bot) => {\n    setSelectedBot(bot);\n    setShowBotSpecs(true);\n  };\n\n  const handleHideBotSpecs = () => {\n    setSelectedBot(null);\n    setShowBotSpecs(false);\n  };\n\n  const handleDischarge = (botId) => {\n    handleRemove(botId); // Call handleRemove to remove the bot from the frontend and backend\n  };\n\n  // Function to filter data based on selected classes\n  const applyFilters = (selectedClasses) => {\n    if (selectedClasses.length === 0) {\n      setFilteredData(data); // No filters selected, show all data\n    } else {\n      setFilteredData(data.filter((bot) => selectedClasses.includes(bot.bot_class)));\n    }\n  };\n\n  useEffect(() => {\n    applyFilters([]); // Initial data, no filters\n  }, [data]);\n\n  return (\n    <div>\n      <h1>Welcome to Bot Battlr</h1>\n      {!showBotSpecs && <SortBar data={filteredData} setData={setFilteredData} />}\n      <FilterBar setFilters={applyFilters} /> {/* Pass the applyFilters function as a prop */}\n      <YourBotArmy enlistedBots={enlistedBots} onDelete={handleRemove} onDischarge={handleDischarge} />\n      {showBotSpecs && <BotSpecs bot={selectedBot} onEnlist={handleEnlist} onBack={handleHideBotSpecs} />}\n      <BotCollection\n        data={filteredData}\n        enlistedBots={enlistedBots}\n        onEnlist={handleEnlist}\n        onRemove={handleRemove}\n        onShowSpecs={handleShowBotSpecs}\n        onDischarge={handleDischarge}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}