{"ast":null,"code":"var _jsxFileName = \"/home/dennis/bot/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport api from './services/api'; // Import the API service to fetch data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    // Fetch bot data from the server and update the state\n    api.getBots().then(data => setBots(data)).catch(error => console.error('Error fetching bots:', error));\n  }, []);\n  const enlistBot = bot => {\n    // Add the bot to the enlistedBots state array\n    setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n  };\n  const releaseBot = botId => {\n    // Remove the bot from the enlistedBots state array\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n  };\n  const dischargeBot = botId => {\n    // Remove the bot from both the enlistedBots state array and the backend server\n    api.deleteBot(botId).then(() => setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId))).catch(error => console.error('Error deleting bot:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      releaseBot: releaseBot,\n      dischargeBot: dischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","api","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","getBots","then","data","catch","error","console","enlistBot","bot","prevEnlistedBots","releaseBot","botId","filter","id","dischargeBot","deleteBot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dennis/bot/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport api from './services/api'; // Import the API service to fetch data\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    // Fetch bot data from the server and update the state\n    api.getBots()\n      .then(data => setBots(data))\n      .catch(error => console.error('Error fetching bots:', error));\n  }, []);\n\n  const enlistBot = (bot) => {\n    // Add the bot to the enlistedBots state array\n    setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n  };\n\n  const releaseBot = (botId) => {\n    // Remove the bot from the enlistedBots state array\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n  };\n\n  const dischargeBot = (botId) => {\n    // Remove the bot from both the enlistedBots state array and the backend server\n    api.deleteBot(botId)\n      .then(() => setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId)))\n      .catch(error => console.error('Error deleting bot:', error));\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Bot Battlr</h1>\n      <BotCollection bots={bots} enlistBot={enlistBot} />\n      <YourBotArmy enlistedBots={enlistedBots} releaseBot={releaseBot} dischargeBot={dischargeBot} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,GAAG,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAG,GAAG,CAACS,OAAO,CAAC,CAAC,CACVC,IAAI,CAACC,IAAI,IAAIL,OAAO,CAACK,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAIC,GAAG,IAAK;IACzB;IACAR,eAAe,CAACS,gBAAgB,IAAI,CAAC,GAAGA,gBAAgB,EAAED,GAAG,CAAC,CAAC;EACjE,CAAC;EAED,MAAME,UAAU,GAAIC,KAAK,IAAK;IAC5B;IACAX,eAAe,CAACS,gBAAgB,IAAIA,gBAAgB,CAACG,MAAM,CAACJ,GAAG,IAAIA,GAAG,CAACK,EAAE,KAAKF,KAAK,CAAC,CAAC;EACvF,CAAC;EAED,MAAMG,YAAY,GAAIH,KAAK,IAAK;IAC9B;IACAnB,GAAG,CAACuB,SAAS,CAACJ,KAAK,CAAC,CACjBT,IAAI,CAAC,MAAMF,eAAe,CAACS,gBAAgB,IAAIA,gBAAgB,CAACG,MAAM,CAACJ,GAAG,IAAIA,GAAG,CAACK,EAAE,KAAKF,KAAK,CAAC,CAAC,CAAC,CACjGP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAChE,CAAC;EAED,oBACEX,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAAuB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB3B,OAAA,CAACJ,aAAa;MAACO,IAAI,EAAEA,IAAK;MAACU,SAAS,EAAEA;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnD3B,OAAA,CAACH,WAAW;MAACQ,YAAY,EAAEA,YAAa;MAACW,UAAU,EAAEA,UAAW;MAACI,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AAEV;AAACzB,EAAA,CAnCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}