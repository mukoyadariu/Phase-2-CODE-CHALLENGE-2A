{"ast":null,"code":"var _jsxFileName = \"/home/dennis/Desktop/MORINGA/phase 2/Phase-2-CODE-CHALLENGE-2A/bot/src/components/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\nimport SortBar from './SortBar';\nimport BotSpecs from './BotSpecs';\nimport FilterBar from './FilterBar'; // Import the FilterBar component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [showBotSpecs, setShowBotSpecs] = useState(false);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedClasses, setSelectedClasses] = useState([]); // State for selected classes\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots').then(response => response.json()).then(data => {\n      setData(data);\n      setFilteredData(data); // Initialize filteredData with all the data\n    }).catch(error => console.error('Error fetching bots:', error));\n  }, []);\n  const handleEnlist = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n    }\n  };\n  const handleRemove = botId => {\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n  };\n  const handleShowBotSpecs = bot => {\n    setSelectedBot(bot);\n    setShowBotSpecs(true);\n  };\n  const handleHideBotSpecs = () => {\n    setShowBotSpecs(false);\n  };\n\n  // Define a function to discharge a bot\n  const handleDischarge = botId => {\n    // Remove the bot from the enlistedBots state\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n\n    // Remove the bot from the backend using fetch with DELETE method\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => console.log('Bot discharged:', data)).catch(error => console.error('Error discharging bot:', error));\n  };\n\n  // Function to filter data based on selected classes\n  const applyFilters = selectedClasses => {\n    setSelectedClasses(selectedClasses); // Update selected classes state\n\n    if (selectedClasses.length === 0) {\n      setFilteredData(data); // No filters selected, show all data\n    } else {\n      setFilteredData(data.filter(bot => selectedClasses.includes(bot.bot_class)));\n    }\n  };\n  const handleSort = property => {\n    const sortedData = [...filteredData].sort((a, b) => a[property] - b[property]);\n    setFilteredData(sortedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), !showBotSpecs && /*#__PURE__*/_jsxDEV(SortBar, {\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      setFilters: applyFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      onDelete: handleRemove,\n      onDischarge: handleDischarge // Pass the handleDischarge function as a prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), showBotSpecs ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: handleEnlist,\n      onBack: handleHideBotSpecs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotCollection, {\n      data: filteredData // Use the filteredData instead of the original data\n      ,\n      enlistedBots: enlistedBots,\n      onEnlist: handleEnlist,\n      onRemove: handleRemove,\n      onShowSpecs: handleShowBotSpecs,\n      onDischarge: handleDischarge // Pass the handleDischarge function as a prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"63nLEbII1iVPgQdsJcncz264A3Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","SortBar","BotSpecs","FilterBar","jsxDEV","_jsxDEV","App","_s","data","setData","enlistedBots","setEnlistedBots","showBotSpecs","setShowBotSpecs","selectedBot","setSelectedBot","filteredData","setFilteredData","selectedClasses","setSelectedClasses","fetch","then","response","json","catch","error","console","handleEnlist","bot","some","enlistedBot","bot_class","prevEnlistedBots","handleRemove","botId","filter","id","handleShowBotSpecs","handleHideBotSpecs","handleDischarge","method","log","applyFilters","length","includes","handleSort","property","sortedData","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","onSort","setFilters","onDelete","onDischarge","onEnlist","onBack","onRemove","onShowSpecs","_c","$RefreshReg$"],"sources":["/home/dennis/Desktop/MORINGA/phase 2/Phase-2-CODE-CHALLENGE-2A/bot/src/components/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\nimport SortBar from './SortBar';\nimport BotSpecs from './BotSpecs';\nimport FilterBar from './FilterBar'; // Import the FilterBar component\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [showBotSpecs, setShowBotSpecs] = useState(false);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedClasses, setSelectedClasses] = useState([]); // State for selected classes\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots')\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        setFilteredData(data); // Initialize filteredData with all the data\n      })\n      .catch((error) => console.error('Error fetching bots:', error));\n  }, []);\n\n  const handleEnlist = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n    }\n  };\n\n  const handleRemove = (botId) => {\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((bot) => bot.id !== botId)\n    );\n  };\n\n  const handleShowBotSpecs = (bot) => {\n    setSelectedBot(bot);\n    setShowBotSpecs(true);\n  };\n\n  const handleHideBotSpecs = () => {\n    setShowBotSpecs(false);\n  };\n\n  // Define a function to discharge a bot\n  const handleDischarge = (botId) => {\n    // Remove the bot from the enlistedBots state\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((bot) => bot.id !== botId)\n    );\n\n    // Remove the bot from the backend using fetch with DELETE method\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE',\n    })\n      .then((response) => response.json())\n      .then((data) => console.log('Bot discharged:', data))\n      .catch((error) => console.error('Error discharging bot:', error));\n  };\n\n  // Function to filter data based on selected classes\n  const applyFilters = (selectedClasses) => {\n    setSelectedClasses(selectedClasses); // Update selected classes state\n\n    if (selectedClasses.length === 0) {\n      setFilteredData(data); // No filters selected, show all data\n    } else {\n      setFilteredData(data.filter((bot) => selectedClasses.includes(bot.bot_class)));\n    }\n  };\n\n  const handleSort = (property) => {\n    const sortedData = [...filteredData].sort((a, b) => a[property] - b[property]);\n    setFilteredData(sortedData);\n  };\n\n  return (\n    <div>\n      <h1>Welcome to Bot Battlr</h1>\n      {!showBotSpecs && <SortBar onSort={handleSort} />}\n      <FilterBar setFilters={applyFilters} /> {/* Pass the applyFilters function as a prop */}\n      <YourBotArmy\n        enlistedBots={enlistedBots}\n        onDelete={handleRemove}\n        onDischarge={handleDischarge} // Pass the handleDischarge function as a prop\n      />\n      {showBotSpecs ? (\n        <BotSpecs bot={selectedBot} onEnlist={handleEnlist} onBack={handleHideBotSpecs} />\n      ) : (\n        <BotCollection\n          data={filteredData} // Use the filteredData instead of the original data\n          enlistedBots={enlistedBots}\n          onEnlist={handleEnlist}\n          onRemove={handleRemove}\n          onShowSpecs={handleShowBotSpecs}\n          onDischarge={handleDischarge} // Pass the handleDischarge function as a prop\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}