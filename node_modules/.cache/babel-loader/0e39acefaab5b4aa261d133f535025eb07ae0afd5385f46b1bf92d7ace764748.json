{"ast":null,"code":"var _jsxFileName = \"/home/dennis/Desktop/MORINGA/phase 2/Phase-2-CODE-CHALLENGE-2A/bot/src/components/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\nimport SortBar from './SortBar';\nimport './App.css';\nimport Bot from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [showBotSpecs, setShowBotSpecs] = useState(false);\n  const [selectedBot, setSelectedBot] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8001/bots').then(response => response.json()).then(data => setData(data)).catch(error => console.error('Error fetching bots:', error));\n  }, []);\n  const handleEnlist = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n    }\n  };\n  const handleDelete = botId => {\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n  };\n  const handleShowBotSpecs = bot => {\n    setSelectedBot(bot);\n    setShowBotSpecs(true);\n  };\n  const handleHideBotSpecs = () => {\n    setSelectedBot(null);\n    setShowBotSpecs(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !showBotSpecs && /*#__PURE__*/_jsxDEV(SortBar, {\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this), showBotSpecs ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: handleEnlist,\n      onBack: handleHideBotSpecs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BotCollection, {\n        data: data,\n        enlistedBots: enlistedBots,\n        onEnlist: handleEnlist,\n        onDelete: handleDelete,\n        onShowBotSpecs: handleShowBotSpecs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        enlistedBots: enlistedBots,\n        onDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UBdOkTGkFrmPCacmppgIwxnUkIw=\");\n_c = App;\nexport default App;\n\n// BotCollection.js\n// import React from 'react';\n// import Bot from './Bot';\n\n// const BotCollection = ({ data, enlistedBots, onEnlist, onDelete, onShowBotSpecs }) => {\n//   if (!data || data.length === 0) {\n//     // If data is empty or undefined, display a loading message or fallback content\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Render the Bot components using the map function */}\n//       {data.map((bot) => (\n//         <Bot\n//           key={bot.id}\n//           bot={bot}\n//           onEnlist={onEnlist}\n//           onDelete={onDelete}\n//           onShowSpecs={() => onShowBotSpecs(bot)}\n//           enlisted={enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default BotCollection;\n\n// BotSpecs.js\n// import React from 'react';\n\n// const BotSpecs = ({ bot, onEnlist, onBack }) => {\n//   const { name, health, damage, armor, bot_class, catchphrase, avatar_url } = bot;\n\n//   return (\n//     <div className=\"bot-specs\">\n//       <img src={avatar_url} alt={name} />\n//       <h3>{name}</h3>\n//       <p>Health: {health}</p>\n//       <p>Damage: {damage}</p>\n//       <p>Armor: {armor}</p>\n//       <p>Class: {bot_class}</p>\n//       <p>Catchphrase: {catchphrase}</p>\n//       {onEnlist && <button onClick={() => onEnlist(bot)}>Enlist</button>}\n//       <button onClick={onBack}>Back</button>\n//     </div>\n//   );\n// };\n\n// export default BotSpecs;\n\n// // SortBar.js\n// import React from 'react';\n\n// const SortBar = ({ data, setData }) => {\n//   const handleSort = (property) => {\n//     const sortedData = [...data].sort((a, b) => a[property] - b[property]);\n//     setData(sortedData);\n//   };\n\n//   return (\n//     <div className=\"sort-bar\">\n//       <button onClick={() => handleSort('health')}>Sort by Health</button>\n//       <button onClick={() => handleSort('damage')}>Sort by Damage</button>\n//       <button onClick={() => handleSort('armor')}>Sort by Armor</button>\n//     </div>\n//   );\n// };\n\n// export default SortBar;\n\n// YourBotArmy.js (No changes required)\n// Bot.js (No changes required)\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","SortBar","Bot","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","enlistedBots","setEnlistedBots","showBotSpecs","setShowBotSpecs","selectedBot","setSelectedBot","fetch","then","response","json","catch","error","console","handleEnlist","bot","some","enlistedBot","bot_class","prevEnlistedBots","handleDelete","botId","filter","id","handleShowBotSpecs","handleHideBotSpecs","children","fileName","_jsxFileName","lineNumber","columnNumber","BotSpecs","onEnlist","onBack","onDelete","onShowBotSpecs","_c","$RefreshReg$"],"sources":["/home/dennis/Desktop/MORINGA/phase 2/Phase-2-CODE-CHALLENGE-2A/bot/src/components/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\nimport SortBar from './SortBar';\nimport './App.css';\nimport Bot from './'\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [showBotSpecs, setShowBotSpecs] = useState(false);\n  const [selectedBot, setSelectedBot] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots')\n      .then((response) => response.json())\n      .then((data) => setData(data))\n      .catch((error) => console.error('Error fetching bots:', error));\n  }, []);\n\n  const handleEnlist = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.bot_class === bot.bot_class)) {\n      setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n    }\n  };\n\n  const handleDelete = (botId) => {\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((bot) => bot.id !== botId)\n    );\n  };\n\n  const handleShowBotSpecs = (bot) => {\n    setSelectedBot(bot);\n    setShowBotSpecs(true);\n  };\n\n  const handleHideBotSpecs = () => {\n    setSelectedBot(null);\n    setShowBotSpecs(false);\n  };\n\n  return (\n    <div>\n      <h1>Welcome to Bot Battlr</h1>\n      {!showBotSpecs && <SortBar data={data} setData={setData} />}\n      {showBotSpecs ? (\n        <BotSpecs bot={selectedBot} onEnlist={handleEnlist} onBack={handleHideBotSpecs} />\n      ) : (\n        <>\n          <BotCollection\n            data={data}\n            enlistedBots={enlistedBots}\n            onEnlist={handleEnlist}\n            onDelete={handleDelete}\n            onShowBotSpecs={handleShowBotSpecs}\n          />\n          <YourBotArmy enlistedBots={enlistedBots} onDelete={handleDelete} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// BotCollection.js\n// import React from 'react';\n// import Bot from './Bot';\n\n// const BotCollection = ({ data, enlistedBots, onEnlist, onDelete, onShowBotSpecs }) => {\n//   if (!data || data.length === 0) {\n//     // If data is empty or undefined, display a loading message or fallback content\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Render the Bot components using the map function */}\n//       {data.map((bot) => (\n//         <Bot\n//           key={bot.id}\n//           bot={bot}\n//           onEnlist={onEnlist}\n//           onDelete={onDelete}\n//           onShowSpecs={() => onShowBotSpecs(bot)}\n//           enlisted={enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default BotCollection;\n\n// BotSpecs.js\n// import React from 'react';\n\n// const BotSpecs = ({ bot, onEnlist, onBack }) => {\n//   const { name, health, damage, armor, bot_class, catchphrase, avatar_url } = bot;\n\n//   return (\n//     <div className=\"bot-specs\">\n//       <img src={avatar_url} alt={name} />\n//       <h3>{name}</h3>\n//       <p>Health: {health}</p>\n//       <p>Damage: {damage}</p>\n//       <p>Armor: {armor}</p>\n//       <p>Class: {bot_class}</p>\n//       <p>Catchphrase: {catchphrase}</p>\n//       {onEnlist && <button onClick={() => onEnlist(bot)}>Enlist</button>}\n//       <button onClick={onBack}>Back</button>\n//     </div>\n//   );\n// };\n\n// export default BotSpecs;\n\n// // SortBar.js\n// import React from 'react';\n\n// const SortBar = ({ data, setData }) => {\n//   const handleSort = (property) => {\n//     const sortedData = [...data].sort((a, b) => a[property] - b[property]);\n//     setData(sortedData);\n//   };\n\n//   return (\n//     <div className=\"sort-bar\">\n//       <button onClick={() => handleSort('health')}>Sort by Health</button>\n//       <button onClick={() => handleSort('damage')}>Sort by Damage</button>\n//       <button onClick={() => handleSort('armor')}>Sort by Armor</button>\n//     </div>\n//   );\n// };\n\n// export default SortBar;\n\n// YourBotArmy.js (No changes required)\n// Bot.js (No changes required)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}